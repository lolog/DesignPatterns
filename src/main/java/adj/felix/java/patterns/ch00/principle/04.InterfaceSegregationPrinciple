>> 接口隔离原则(Interface Segregation Principle)

001.定义
	01) 客户端不应该依赖它不需要的接口。
		那依赖什么呢？依赖它需要的接口,客户端需要什么接口就提供什么接口,把不需要的接口剔除,那就需要对接口进行细化,保证其纯洁性。
	02) 类间的依赖关系应该建立在最小的接口上。
		它要求是最小的接口,也是要求接口细化,接口纯洁。
		
002.什么是接口？
	接口分为两类：
	01) 实例接口(Object Interface) 
		java中声明的一个类,类也是一种接口。
	02) 类接口(Class Interface) 
		java中使用Interface定义的接口。

003.使用
	本质:通过抽象使各个类或模块的实现彼此独立,不互相影响,实现模块间的松耦合。项目中使用这个原则要遵循下面的规则：
	01) 每个类尽量都有接口或者抽象类,或者抽象类和接口两者都具备
	02) 变量类型尽可能使用接口或者抽象类
	03) 任何类都不应该从具体类派生
	04) 尽量不要重写基类的方法 
		如果基类是一个抽象类,而这个方法已经实现了,子类尽量不要重写。类间依赖的是抽象,重写了抽象的实现方法,对依赖的稳定性会有一定的影响。
	06) 结合里氏替换原则使用 
		里氏替换原则:父类出现的地方子类就能出现。结合本章我们得出了一个通俗的规则：
		接口:负责定义public属性和方法,并且声明与其他对象的依赖关系。
		抽象类:负责公共构造部分的实现,实现类准确的实现业务逻辑,同时在适当的时候对父类进行细化。