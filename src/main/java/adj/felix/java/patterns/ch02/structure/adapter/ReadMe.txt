01. 适配器模式
	在适配器模式中, 实现由源到目标的适配, 适配器负责把源过渡到目标。
	保留现有类所提供的服务, 向客户提供接口, 以满足客户的期望。即, 在不改变原有系统的基础上, 提供新的服务接口。

02. 角色
	(1) 目标(Target)     客户端期待使用的接口。
	(2) 源(Adaptee)      需要被适配的接口。
	(3) 适配器(Adapter)  将源已有的接口转换为目标匹配的接口。即, 对源和目标接口进行适配。
	(4) 客户端(Client)   与符合Target接口的对象协同。

03. 适配器模式分类
	(1) 类的适配器模式
		1) 采用继承实现。
		2) 适配器继承自己实现的类,一般为多重继承。
		3) Adapter继承自Adaptee
		   I. 用一个具体的Adapter和Target进行匹配。
		   II. Adapter重定义Adaptee的部分行为。
		   III. 仅仅引入一个对象, 并不需要额外的指针间接取得adaptee。
	(2) 对象适配器模式
		1) 采用对象组合方式实现, 把源作为一个对象聚合到适配器类中。
		2) Adapter与Adaptee是委托关系
		   I. 允许一个Adapter与多个Adaptee同时工作。
		   II. 提供Adaptee行为的方法。

04. 优点
	(1) 目标类和适配者类解耦
	(2) 增加了类的透明性和复用性, 将具体的实现封装在适配者类中, 对于客户端类来说是透明的, 而且提高了适配者的复用性。
	(3) 灵活性和扩展性都非常好, 符合开闭原则。

05. 类适配器的优缺点：
	(1) 优点
		由于适配器类是适配者类的子类, 因此可以在适配器类中置换一些适配者的方法, 使得适配器的灵活性更强。
	(2) 缺点
		对于Java、C#等不支持多重继承的语言, 一次最多只能适配一个适配者类, 而且目标抽象类只能为接口, 不能为类, 其使用有一定的局限性, 不能将一个适配者类和他的子类同时适配到目标接口。

06. 对象适配器的优缺点：
	(1) 优点
		把多个不同的源适配到同一个目标, 也就是说, 同一个适配器可以把适不同的源都适配到目标接口。
	(2) 缺点
		与类适配器模式相比, 要想置换适配者类的方法就不容易。