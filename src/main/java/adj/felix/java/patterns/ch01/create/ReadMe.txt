001. 创建型模式
	提供一种在创建对象的同时隐藏创建逻辑的方式,而不是使用 new运算符直接实例化对象。
	包含：
		01) 简单工厂模式(Simple Factory Pattern)
		02) 工厂模式(Factory Pattern)
		03) 抽象工厂模式(Abstract Factory Pattern)
		04) 单例模式(Singleton Pattern)
		05) 建造者模式(Builder Pattern)
		05) 原型模式(Prototype Pattern)

002. 工厂模式与简单工厂模式比较
	01) 简单工厂模式的优点
		工厂类中包含了必要的逻辑判断,根据客户端的选择条件动态实例化相关的类,对于客户端来说,去除了与具体产品的依赖。
	02) 工厂模式的优点
		工厂模式是简单工厂模式的进一步抽象和推广。它遵循了"开放-封闭"原则。
	03) 简单工厂的缺点
		没有遵守"开放-封闭"原则。所谓的"开放-封闭"原则就是开放接口,封闭修改。
	04) 工厂模式的缺点
		工厂方法把简单工厂的内部逻辑判断转移到了客户端代码来执行;每增加一产品就要增加一个产品工厂的类,增加了额外的开发量。